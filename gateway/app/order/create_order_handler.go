package order

import (
	"context"
)

type CreateOrderItem struct {
	ItemId   string `json:"item_id"`
	ItemName string `json:"item_name"`
	Quantity int    `json:"quantity"`
	Price    int    `json:"price"`
}

type CreateOrderRequest struct {
	// TODO: took customer id from the auth service
	CustomerId string
	Items      []CreateOrderItem
}

type CreateOrderResponse struct {
	OrderId string `json:"order_id"`
	Status  string `json:"status"`
}

type CreateOrderHandler struct {
}

func NewCreateOrderHandler() *CreateOrderHandler {
	return &CreateOrderHandler{}
}

func (h *CreateOrderHandler) Handle(ctx context.Context, req *CreateOrderRequest) (*CreateOrderResponse, error) {
	// TODO: connect to the order service with grpc
	// Process the order creation logic here
	// For example, you can call a service to create the order

	return &CreateOrderResponse{
		// TODO: Replace with actual order ID and status, order id should be generated by the order service.
		//  and should be unique
		OrderId: "123456",
		Status:  "created",
	}, nil
}
